<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--保证接口和映射文件一一对应  -->
<mapper namespace="cn.tarena.ht.mapper.UserMapper">

    <!-- 基于用户表为主表，关联查询userinfo、user、dept的信息 -->
    <select id="findAllUser"  resultMap="userRM">
      select * from
              ( SELECT  * FROM
             user_p  u
             LEFT JOIN
                (SELECT u.user_info_id , u.name, u.card_no,u.manager_id,u.join_date,p.m_name, u.salary ,u.birthday, u.gender,u.station ,u.telephone ,u.user_level,u.remark, u.order_no FROM
                user_info_p u
                LEFT JOIN
                (SELECT user_info_id m_id, NAME m_name FROM User_Info_p ) p
                ON
                  u.manager_id=p.m_id)   info
            ON
            u.user_id=info.user_info_id  ) u
      left join
      dept_p d
      on
      u.dept_id = d.dept_id
    </select>


    <!-- 插入user表信息 -->
    <insert id="saveUser"  parameterType="cn.tarena.ht.pojo.User">
          insert  into  user_p  values (
          #{userId} ,
          #{dept.deptId} ,
          #{username} ,
          #{password} ,
          #{state} ,
          #{createBy,jdbcType=VARCHAR},
          #{createDept,jdbcType=VARCHAR},
          #{createTime,jdbcType=DATE},
          #{updateBy,jdbcType=VARCHAR},
          #{updateTime,jdbcType=DATE}
          )
    </insert>


    <!-- 基于userId用户Id去数据库（user_p、user_info_p、dept_p）显示数据 -->
    <select id="findUserById"  resultMap="userRM"  >
              SELECT * FROM (
                            SELECT u2.* ,p1.dept_name  FROM
                            (SELECT * FROM
                            (select u.user_info_id,u.name,u.card_no,u.manager_id,p.m_name,u.join_date,
                                    u.salary,u.birthday,u.gender,u.station,u.telephone,u.user_level,u.remark,
                                    u.order_no from
                                    user_info_p u
                                          left join
                                    (select user_info_id m_id, name m_name from  user_info_p) p
                                          on u.manager_id = p.m_id) u
                            LEFT  JOIN
                            user_p u1
                            ON
                            u.user_info_id = u1.user_id) u2
                            LEFT JOIN
                            dept_p  p1
                            ON
                            u2.dept_id = p1.dept_id  )
                             WHERE user_id = #{userId}
    </select>



    <!-- 修改用户表信息User -->
    <update id="updateUser"  parameterType="cn.tarena.ht.pojo.User">
            update  user_p
            <set>
           	dept_id = #{dept.deptId},
	   		username = #{username},
	   		password = #{password},
	   		state = #{state},
                <include refid="userUpdate"/>
            </set>
        where user_id = #{userId}
    </update>


    <!--  -->
    <delete id="deleteUser">
          delete   from  user_p where  user_id in
          <foreach collection="userIds"   item="userId"  index="index" separator="," open="("  close=")">
                #{deptId}
          </foreach>
    </delete>

    <!-- 复用SQL信息 -->
    <sql id="userUpdate">
        <if test="createBy !=null">create_by = #{createBy,jdbcType=VARCHAR},</if>
        <if test="createDept !=null">create_dept = #{createDept,jdbcType=VARCHAR},</if>
        <if test="createTime !=null">create_time = #{createTime},</if>
        <if test="updateBy !=null">update_by = #{updateBy,jdbcType=VARCHAR},</if>
        <if test="updateTime !=null">update_time = #{updateTime}</if>
    </sql>

    <!-- 映射表关系 -->
    <!-- 封装用户信息表-->
    <resultMap id="userRM" type="cn.tarena.ht.pojo.User"  autoMapping="true">
                <id column="user_id" property="userId"></id>
                <!-- 部门表的映射 -->
                <association property="dept"  javaType="Dept">
                        <id column="dept_id" property="deptId"></id>
                        <id column="dept_name" property="deptName"></id>
                </association>
                <!-- 用户拓展信息表的映射 -->
                <association property="userInfo"  javaType="UserInfo"  resultMap="userInfoRM">
                        <id column="m_name" property="name"></id>
                </association>
    </resultMap>

    <!-- 封装userInfo对象，它是自关联的表-->
    <resultMap id="userInfoRM" type="UserInfo"  autoMapping="true">
                <!-- 封装主键信息 -->
                <id  column="user_info_id"  property="userInfoId"></id>
                <!--使用自动封装后将结果集自动映射  -->
                <association property="managerId"  javaType="UserInfo">
                        <id column="manager_id"  property="userInfoId"></id>
                        <id column="m_name" property="name"></id>
                </association>
    </resultMap>


</mapper>
